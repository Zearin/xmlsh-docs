<?xml version="1.0" encoding="UTF-8"?>
<div xmlns="http://www.w3.org/1999/xhtml">
   <h1>Command import</h1>

   
   <h3>Name</h3>

   <strong>import</strong> imports a module or package into the default namespace or a named namespace.<br/>
   
   <h3>Synopsis</h3>

import module [prefix=]module<br/>
import package [prefix=]package [ [prefix=]package ...]<br/>
import commands [prefix=]command-subpackage [ [prefix=]command-subpackage ...]<br/>
import java url [url ...]<br/>
   
   <h3>Description  Modules</h3>

The import command imports a module into the default namespace or a named namespace.<br/>
See the <a  href="/Modules">Modules</a> section for a description of Extension Modules.<br/>
If prefix is omited then the module is imported into the default namespace.<br/>
If prefix is specified then the module is imported into the named prefix and commands are accessed by using the prefix.<br/>
   <br/>
"module" is either the name of an extension module or the path to the module.xml file.<br/>
For named modules, the XMODPATH variable is searched.  For each directory in XMODPATH, a child directory is searched with the name of the module, and if found the file "module.xml" is searched for in that directory.  If found then that module.xml file is used for the module configuration.<br/>
   <br/>
If a URL is specified for "module" it is assumed to be the module configuration file (typically named "module.xml" but could be any name.  <br/>
When located, the fully expanded URL for the module configuration file is used as the base URI for any dependant files (e.g jar files in the class path).  Both the module.xml and its Dependant jars can be local files or on the network.<br/>

Commands are found by looking in that package for classes that extend the XCommand abstract class.<br/>
Commands may also be xmlsh scripts as resources within the specified package (and end with the .xsh extension).<br/>
   <br/>
Example<br/>
   <br/>
Load module calabash from /usr/local/xmlsh/calabash<br/>
   <div class="code">
      <pre>XMODPATH=/usr/local/xmlsh/ext
import module xp=calabsh
xp:xproc xprocfile.xpl
...</pre>
   </div>

Load module marklogic from /usr/local/markogic/module.xml<br/>
   <div class="code">
      <pre>import module ml=/usr/local/marklogic/module.xml
ml:list</pre>
   </div>

Load module marklogic from a remote host at <a class="ext" href="http://test.xmlsh.org/modules/marklogic/module.xml">http://test.xmlsh.org/modules/marklogic/module.xml</a>
   <br/>
where all jar files are located remotely<br/>
   <div class="code">
      <pre>import module ml=http://test.xmlsh.org/modules/marklogic/module.xml</pre>
   </div>

   
   <h3>Description  Packages</h3>

Commands that are already in the CLASSPATH (such as those builtin to xmlsh) may be imported by specifying just the package name using the "import package" command.  A namespace prefix may be provided and optionally a symbolic name may be specified<br/>
   <br/>
Example, to import the posix commands using the full package name and specifying the posix prefix<br/>

   <div class="code">
      <pre>import package posix=org.xmlsh.commands.posix</pre>
   </div>

   
   <h3>Description  Commands</h3>

To simplify importing sets of commands in the org.xmlsh.commands package, the "import commands" command may be used.<br/>
This is equivalent to using "import package" giving "org.xmlsh.commands." as the prefix to the command.<br/>
   <br/>
Example, to import the posix commands using the full package name and specifying the posix prefix<br/>

   <div class="code">
      <pre>import commands posix=posix</pre>
   </div>

Example to import the experimental commands into the global namespace<br/>

   <div class="code">
      <pre>import commands experimental</pre>
   </div>

You can group commands together to include multiple command sets<br/>

   <div class="code">
      <pre>import commands posix experimental</pre>
   </div>

   
   <h3>Description Java</h3>

The shell's classpath can be extended by using the "import java" command.  With no further arguments it prints the current classpath.  Arguments are added to the classpath.  They can be any URI, but typically will be paths to jar files.   Relative paths are resolved against the current directory.<br/>
   <br/>
The classpath of the current shell is used as the base classpath for any commands which dynamically load java classes.<br/>
For example, <a  href="/CommandXsql">xsql</a>, <a  href="/CommandJset">jset</a>, <a  href="/CommandJset">jcall</a>, <a  href="/FunctionJnew">jnew</a>.<br/>
   <br/>
Print the current classpath<br/>
   <div class="code">
      <pre>import java</pre>
   </div>

Add myfile.jar to the classpath<br/>
   <div class="code">
      <pre>import java myfile.jar</pre>
   </div>


   <br/>


 
   <a  href="/Modules">Modules</a>
   <br/>


</div>
